{"version":3,"sources":["components/common/ModalWindow.module.css","components/PostDetailsContainer/PostDetails.module.css","components/PostDetailsContainer/ConfirmWindow/ConfirmWindow.module.css","components/PostsContainer/PostsContainer.module.css","components/PostsContainer/PostItem/PostItem.module.css","components/UsersContainer/UserItem/UserItem.module.css","components/HeaderContainer/HeaderContainer.module.css","components/PostDetailsContainer/Comment/Comment.module.css","components/PostDetailsContainer/Post/Post.module.css","components/UsersContainer/UsersContainer.module.css","components/common/Loader.module.css","reportWebVitals.js","assets/group.svg","assets/post.svg","assets/sticky-notes.svg","components/HeaderContainer/HeaderContainer.jsx","components/PostsContainer/PostItem/PostItem.jsx","assets/loader.svg","components/common/Loader.jsx","utils/animation.js","components/common/ModalWindow.jsx","components/PostsContainer/AddNewPostModal/AddNewPostModal.jsx","api/api.js","redux/usersReducer.js","redux/appReducer.js","redux/postsReducer.js","utils/postsSelectors.js","utils/usersSelectors.js","components/PostsContainer/PostsContainer.jsx","components/UsersContainer/UserItem/UserItem.jsx","components/UsersContainer/UsersContainer.jsx","components/PostDetailsContainer/Comment/Comment.jsx","components/PostDetailsContainer/EditPostModal/EditPostModal.jsx","components/PostDetailsContainer/ConfirmWindow/ConfirmWindow.jsx","components/PostDetailsContainer/Post/Post.jsx","components/PostDetailsContainer/PostDetailsContainer.jsx","redux/store.js","utils/appSelectors.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HeaderContainer","className","s","header_wrap","nav_wrap","activeClassName","active","to","src","users","alt","posts","post","PostItem","postId","title","body","setCurrentPost","setPostNumber","useState","isOnMouse","setIsOnMouse","post_item_wrap","post_title","post_body","nav_btn_wrap","onClick","onMouseOver","onMouseOut","classNames","details_btn","on_mouse","Loader","loader_wrap","loader","animateModal","cn","animate","elements","document","getElementsByClassName","easing","duration","opacity","transform","ModalWindow","setFormData","setIsOpen","isOnMousePublish","setIsOnMousePublish","isOnMouseCancel","setIsOnMouseCancel","fieldsNotFilled","setFieldsNotFilled","localTitle","setLocalTitle","localBody","setLocalBody","useEffect","modal_overflow","modal_window","onSubmit","e","preventDefault","target","value","classList","remove","title_wrap","onChange","currentTarget","type","name","post_wrap","post_span","text_area","autoSize","minRows","maxRows","buttons_wrap","fields_message","publish_btn","on_mouse_publish","cancel_btn","on_mouse_cancel","AddNewPostModal","addPostToAPI","userId","formData","instance","axios","baseURL","usersAPI","get","postsAPI","headers","put","delete","GET_USERS","SET_CURRENT_POSTS_USER_NAME","initialState","usersList","currentPostsUserName","setCurrentPostsUserName","usersReducer","state","action","filter","user","id","SET_ERROR_MESSAGE","INITIALIZED_SUCCESS","error","initialized","dispatchErrorMessage","dispatch","err","message","appReducer","GET_POSTS","ADD_POST","SET_CURRENT_POST","SET_POST_NUMBER","SET_COMMENTS","EDIT_POST_SUCCESS","DELETE_POST","postsList","currentPost","postNumber","comments","num","getPostsFromAPI","a","response","data","length","getCommentsFromAPI","postsReducer","postData","map","editedPostData","deletedPostId","getPostsList","getCurrentPost","getPostNumber","getComments","getUsersList","getCurrentPostsUserName","compose","connect","postBody","withRouter","props","isInit","setIsInit","isOpen","match","params","posts_page_wrap","add","add_btn","posts_items_wrap","UserItem","companyName","email","user_item_wrap","company_name","posts_btn","users_page_wrap","users_title","users_items_wrap","company","Comment","comment_wrap","name_email_wrap","EditPostModal","editPost","setConfirmWindowIsOpen","deletePost","confirmIsOnMouse","setConfirmIsOnMouse","cancelIsOnMouse","setCancelIsOnMouse","window_overflow","window","question","setTimeout","history","push","confirm_btn","confirm_on_mouse","cancel_on_mouse","Post","isOnMouseEdit","setIsOnMouseEdit","isOnMouseDelete","setIsOnMouseDelete","confirmWindowIsOpen","post_page_wrap","title_buttons_wrap","page_title","buttons","edit_btn","on_mouse_edit","delete_btn","on_mouse_delete","comments_title","comments_wrap","comment","rootReducer","combineReducers","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","getInitialized","AppContainer","initializeApp","usersPromise","postsPromise","commentsPromise","Promise","all","exact","path","render","PostsApp","basename","process","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cdfb707e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_overflow\":\"ModalWindow_modal_overflow__MnY4C\",\"modal_window\":\"ModalWindow_modal_window__2njhq\",\"title_wrap\":\"ModalWindow_title_wrap__ve1Xa\",\"post_wrap\":\"ModalWindow_post_wrap__X4pno\",\"text_area\":\"ModalWindow_text_area__2PYky\",\"buttons_wrap\":\"ModalWindow_buttons_wrap__4oOHm\",\"publish_btn\":\"ModalWindow_publish_btn__2moBV\",\"cancel_btn\":\"ModalWindow_cancel_btn__1yjQA\",\"on_mouse_publish\":\"ModalWindow_on_mouse_publish__Y5SmR\",\"on_mouse_cancel\":\"ModalWindow_on_mouse_cancel__3bkXT\",\"fields_message\":\"ModalWindow_fields_message__1OLql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_page_wrap\":\"PostDetails_post_page_wrap__3pSW6\",\"title_buttons_wrap\":\"PostDetails_title_buttons_wrap__22iwR\",\"page_title\":\"PostDetails_page_title__3IWGj\",\"comments_title\":\"PostDetails_comments_title__1OWvP\",\"buttons\":\"PostDetails_buttons__12wE5\",\"edit_btn\":\"PostDetails_edit_btn__3NSKp\",\"delete_btn\":\"PostDetails_delete_btn__2iMQy\",\"on_mouse_edit\":\"PostDetails_on_mouse_edit__1c6O4\",\"on_mouse_delete\":\"PostDetails_on_mouse_delete__1nIqe\",\"comments_wrap\":\"PostDetails_comments_wrap__fHBb6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window_overflow\":\"ConfirmWindow_window_overflow__17gll\",\"window\":\"ConfirmWindow_window__2GIGz\",\"question\":\"ConfirmWindow_question__1HG4K\",\"buttons_wrap\":\"ConfirmWindow_buttons_wrap__1OYk-\",\"confirm_btn\":\"ConfirmWindow_confirm_btn__2VmHT\",\"cancel_btn\":\"ConfirmWindow_cancel_btn__301ar\",\"confirm_on_mouse\":\"ConfirmWindow_confirm_on_mouse__ouXFS\",\"cancel_on_mouse\":\"ConfirmWindow_cancel_on_mouse__1fA1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_page_wrap\":\"PostsContainer_posts_page_wrap__y0Ssu\",\"title_wrap\":\"PostsContainer_title_wrap__3F37z\",\"title\":\"PostsContainer_title__1vN6n\",\"add_btn\":\"PostsContainer_add_btn__udSpD\",\"on_mouse\":\"PostsContainer_on_mouse__2d80O\",\"posts_items_wrap\":\"PostsContainer_posts_items_wrap__36QFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_item_wrap\":\"PostItem_post_item_wrap__2ykG3\",\"post_title\":\"PostItem_post_title__3eDX0\",\"post_body\":\"PostItem_post_body__4ZNhZ\",\"nav_btn_wrap\":\"PostItem_nav_btn_wrap__1V-yF\",\"details_btn\":\"PostItem_details_btn__3wnmv\",\"on_mouse\":\"PostItem_on_mouse__2DRQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_item_wrap\":\"UserItem_user_item_wrap__asnKt\",\"name\":\"UserItem_name___QB_t\",\"company_name\":\"UserItem_company_name__3e2Gy\",\"email\":\"UserItem_email__hS72l\",\"posts_btn\":\"UserItem_posts_btn__9_wE5\",\"on_mouse\":\"UserItem_on_mouse__3Zbi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrap\":\"HeaderContainer_header_wrap__1J2hV\",\"nav_wrap\":\"HeaderContainer_nav_wrap__3UMcS\",\"active\":\"HeaderContainer_active__10bgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment_wrap\":\"Comment_comment_wrap__2oWDE\",\"name_email_wrap\":\"Comment_name_email_wrap__1rZkq\",\"name\":\"Comment_name__2etLz\",\"email\":\"Comment_email__XWhZF\",\"body\":\"Comment_body__1cypn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_wrap\":\"Post_post_wrap__2f-_s\",\"post\":\"Post_post__2biiC\",\"title\":\"Post_title__1K4Xl\",\"body\":\"Post_body__1dtK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_page_wrap\":\"UsersContainer_users_page_wrap__3Kljs\",\"users_title\":\"UsersContainer_users_title__3MavA\",\"users_items_wrap\":\"UsersContainer_users_items_wrap__3BJVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader_wrap\":\"Loader_loader_wrap__1359I\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/group.6776bd83.svg\";","export default __webpack_public_path__ + \"static/media/post.01865db7.svg\";","export default __webpack_public_path__ + \"static/media/sticky-notes.732056f4.svg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./HeaderContainer.module.css\";\r\n//icons\r\nimport users from \"../../assets/group.svg\";\r\nimport posts from \"../../assets/post.svg\";\r\nimport post from \"../../assets/sticky-notes.svg\";\r\n\r\nconst HeaderContainer = () => {\r\n  return (\r\n    <div className={s.header_wrap}>\r\n      <nav className={s.nav_wrap}>\r\n        <NavLink activeClassName={s.active} to=\"/users\">\r\n          <img src={users} alt=\"\" />\r\n        </NavLink>\r\n        <NavLink activeClassName={s.active} to=\"/posts\">\r\n          <img src={posts} alt=\"\" />\r\n        </NavLink>\r\n        <NavLink activeClassName={s.active} to=\"/post\">\r\n          <img src={post} alt=\"\" />\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import { React, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport s from \"./PostItem.module.css\";\r\n\r\nconst PostItem = ({ postId, title, body, setCurrentPost, setPostNumber }) => {\r\n  const [isOnMouse, setIsOnMouse] = useState(false);\r\n\r\n  return (\r\n    <div className={s.post_item_wrap}>\r\n      <div className={s.post_title}>{title}</div>\r\n      <div className={s.post_body}>{body}</div>\r\n      <NavLink className={s.nav_btn_wrap} to={`/post/` + postId}>\r\n        <button\r\n          onClick={() => {\r\n            setCurrentPost(postId);\r\n            setPostNumber(postId);\r\n          }}\r\n          onMouseOver={() => setIsOnMouse(true)}\r\n          onMouseOut={() => setIsOnMouse(false)}\r\n          className={classNames(s.details_btn, {\r\n            [s.on_mouse]: isOnMouse,\r\n          })}\r\n        >\r\n          Details\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","export default __webpack_public_path__ + \"static/media/loader.9e0911cf.svg\";","import React from \"react\";\r\nimport s from \"./Loader.module.css\";\r\n//icon\r\nimport loader from \"../../assets/loader.svg\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={s.loader_wrap}>\r\n      <img src={loader} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import animate from \"animateplus\";\r\n\r\nexport const animateModal = (cn) => {\r\n  animate({\r\n    elements: document.getElementsByClassName(cn),\r\n    easing: \"out-quartic\",\r\n    duration: 700,\r\n    opacity: [0, 1],\r\n    transform: [\"translateY(30px)\", 0],\r\n  });\r\n};\r\n","//libraries\r\nimport { React, useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { animateModal } from \"../../utils/animation\";\r\n//css\r\nimport s from \"./ModalWindow.module.css\";\r\n//components\r\nimport Textarea from \"rc-textarea\";\r\n\r\nconst ModalWindow = ({ setFormData, setIsOpen, title = null, body = null }) => {\r\n  const [isOnMousePublish, setIsOnMousePublish] = useState(false);\r\n  const [isOnMouseCancel, setIsOnMouseCancel] = useState(false);\r\n  const [fieldsNotFilled, setFieldsNotFilled] = useState(false);\r\n  const [localTitle, setLocalTitle] = useState(title);\r\n  const [localBody, setLocalBody] = useState(body);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let title = e.target.title.value;\r\n    let post = e.target.post.value;\r\n    if (title && post) {\r\n      setFormData({ title, post });\r\n      document.body.classList.remove(\"lock\");\r\n    } else {\r\n      setFieldsNotFilled(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => animateModal(s.modal_overflow), [setIsOpen]);\r\n\r\n  return (\r\n    <div className={s.modal_overflow}>\r\n      <div className={s.modal_window}>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className={s.title_wrap}>\r\n            <span>Title</span>\r\n            <input\r\n              value={localTitle}\r\n              onChange={(e) => setLocalTitle(e.currentTarget.value)}\r\n              type=\"text\"\r\n              name=\"title\"\r\n            />\r\n          </div>\r\n\r\n          <div className={s.post_wrap}>\r\n            <span className={s.post_span}>Post</span>\r\n            <Textarea\r\n              value={localBody}\r\n              onChange={(e) => setLocalBody(e.currentTarget.value)}\r\n              className={s.text_area}\r\n              autoSize={{ minRows: 8, maxRows: 8 }}\r\n              name=\"post\"\r\n            />\r\n          </div>\r\n\r\n          <div className={s.buttons_wrap}>\r\n            {fieldsNotFilled && (\r\n              <div className={s.fields_message}>Please fill in all fields</div>\r\n            )}\r\n            <button\r\n              className={classNames(s.publish_btn, {\r\n                [s.on_mouse_publish]: isOnMousePublish,\r\n              })}\r\n              onMouseOver={() => setIsOnMousePublish(true)}\r\n              onMouseOut={() => setIsOnMousePublish(false)}\r\n              type=\"submit\"\r\n            >\r\n              Publish\r\n            </button>\r\n            <button\r\n              className={classNames(s.cancel_btn, {\r\n                [s.on_mouse_cancel]: isOnMouseCancel,\r\n              })}\r\n              onMouseOver={() => setIsOnMouseCancel(true)}\r\n              onMouseOut={() => setIsOnMouseCancel(false)}\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                document.body.classList.remove(\"lock\");\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","import { React, useState, useEffect } from \"react\";\r\n//components\r\nimport ModalWindow from \"../../common/ModalWindow\";\r\n\r\nconst AddNewPostModal = ({ setIsOpen, addPostToAPI, userId }) => {\r\n  const [formData, setFormData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (formData) {\r\n      addPostToAPI(userId, formData.title, formData.post).then(() => {\r\n        setIsOpen(false);\r\n        document.body.classList.remove(\"lock\");\r\n      });\r\n    }\r\n  }, [formData, addPostToAPI, userId, setIsOpen]);\r\n\r\n  return <ModalWindow setFormData={setFormData} setIsOpen={setIsOpen} />;\r\n};\r\n\r\nexport default AddNewPostModal;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers() {\r\n    return instance.get(\"users\");\r\n  },\r\n};\r\n\r\nexport const postsAPI = {\r\n  getPosts(userId) {\r\n    return instance.get(`posts?userId=${userId}`);\r\n  },\r\n\r\n  addPost(body) {\r\n    return instance.post(\"posts\", body, {\r\n      headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\r\n    });\r\n  },\r\n\r\n  getComments(postId) {\r\n    return instance.get(`comments?postId=${postId}`);\r\n  },\r\n\r\n  editPost(postId, body) {\r\n    return instance.put(`posts/${postId}`, body, {\r\n      headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\r\n    });\r\n  },\r\n\r\n  deletePost(postId) {\r\n    return instance.delete(`posts/${postId}`);\r\n  },\r\n};\r\n","import { usersAPI } from \"../api/api\";\r\nimport { dispatchErrorMessage } from \"./appReducer\";\r\n\r\nconst GET_USERS = \"GET_USERS\";\r\nconst SET_CURRENT_POSTS_USER_NAME = \"SET_CURRENT_POSTS_USER_NAME\";\r\n\r\nconst initialState = {\r\n  usersList: null,\r\n  currentPostsUserName: null,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        usersList: action.users,\r\n      };\r\n\r\n    case SET_CURRENT_POSTS_USER_NAME:\r\n      return {\r\n        ...state,\r\n        currentPostsUserName: state.usersList.filter(\r\n          (user) => user.id === action.userId\r\n        )[0].name,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setUsers = (users) => ({ type: GET_USERS, users });\r\nexport const setCurrentPostsUserName = (userId) => ({\r\n  type: SET_CURRENT_POSTS_USER_NAME,\r\n  userId,\r\n});\r\n\r\nexport const getUsersFromAPI = () => async (dispatch) => {\r\n  try {\r\n    let response = await usersAPI.getUsers();\r\n    if (response.data.length > 0) {\r\n      dispatch(setUsers(response.data));\r\n      dispatch(setCurrentPostsUserName(1));\r\n    }\r\n    return response;\r\n  } catch (err) {\r\n    dispatchErrorMessage(dispatch, err);\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import animate from \"animateplus\";\r\nimport { getCommentsFromAPI } from \"./postsReducer\";\r\nimport { getPostsFromAPI, setCurrentPost } from \"./postsReducer\";\r\nimport { getUsersFromAPI } from \"./usersReducer\";\r\n\r\nconst SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\";\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nconst initialState = {\r\n  error: null,\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setErrorMessage = (error) => ({ type: SET_ERROR_MESSAGE, error });\r\nconst initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const dispatchErrorMessage = (dispatch, err) => {\r\n  dispatch(\r\n    setErrorMessage({\r\n      message: \"Something went wrong. Please reload a page\",\r\n      err,\r\n    })\r\n  );\r\n};\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let usersPromise = dispatch(getUsersFromAPI());\r\n  let postsPromise = dispatch(getPostsFromAPI(1));\r\n  let commentsPromise = dispatch(getCommentsFromAPI(1));\r\n\r\n  Promise.all([usersPromise, postsPromise, commentsPromise]).then(() => {\r\n    dispatch(setCurrentPost(1));\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { postsAPI } from \"../api/api\";\r\nimport { dispatchErrorMessage } from \"./appReducer\";\r\n\r\nconst GET_POSTS = \"GET_POSTS\";\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_CURRENT_POST = \"SET_CURRENT_POST\";\r\nconst SET_POST_NUMBER = \"SET_POST_NUMBER\";\r\nconst SET_COMMENTS = \"SET_COMMENTS\";\r\nconst EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nconst initialState = {\r\n  postsList: null,\r\n  currentPost: null,\r\n  postNumber: 1,\r\n  comments: null,\r\n};\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        postsList: action.posts,\r\n      };\r\n\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        postsList: [action.postData, ...state.postsList],\r\n      };\r\n\r\n    case SET_CURRENT_POST:\r\n      return {\r\n        ...state,\r\n        currentPost: state.postsList.filter(\r\n          (post) => post.id === action.postId\r\n        )[0],\r\n      };\r\n\r\n    case SET_POST_NUMBER:\r\n      return {\r\n        ...state,\r\n        postNumber: action.num,\r\n      };\r\n\r\n    case SET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.comments,\r\n      };\r\n\r\n    case EDIT_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        postsList: state.postsList.map((post) => {\r\n          if (post.id === action.editedPostData.id) {\r\n            post = action.editedPostData;\r\n          }\r\n          return post;\r\n        }),\r\n        currentPost: action.editedPostData,\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postsList: state.postsList.filter(\r\n          (post) => post.id !== action.deletedPostId\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setPosts = (posts) => ({ type: GET_POSTS, posts });\r\nconst addPost = (postData) => ({ type: ADD_POST, postData });\r\nexport const setCurrentPost = (postId) => ({ type: SET_CURRENT_POST, postId });\r\nexport const setPostNumber = (num) => ({ type: SET_POST_NUMBER, num });\r\nconst setComments = (comments) => ({ type: SET_COMMENTS, comments });\r\nconst editPostSuccess = (editedPostData) => ({\r\n  type: EDIT_POST_SUCCESS,\r\n  editedPostData,\r\n});\r\nconst postDeletedSuccess = (deletedPostId) => ({\r\n  type: DELETE_POST,\r\n  deletedPostId,\r\n});\r\n\r\nexport const getPostsFromAPI = (userId) => async (dispatch) => {\r\n  try {\r\n    let response = await postsAPI.getPosts(userId);\r\n    if (response.data.length > 0) {\r\n      dispatch(setPosts(response.data));\r\n      // dispatch(setCurrentPost(1));\r\n    }\r\n    return response;\r\n  } catch (err) {\r\n    dispatchErrorMessage(dispatch, err);\r\n  }\r\n};\r\n\r\nexport const addPostToAPI = (userId, title, body) => async (dispatch) => {\r\n  try {\r\n    let postBody = { title, userId, body };\r\n    let response = await postsAPI.addPost(postBody);\r\n    dispatch(addPost(response.data));\r\n  } catch (err) {\r\n    dispatchErrorMessage(dispatch, err);\r\n  }\r\n};\r\n\r\nexport const getCommentsFromAPI = (postId) => async (dispatch) => {\r\n  try {\r\n    let response = await postsAPI.getComments(postId);\r\n    if (response.data.length > 0) {\r\n      dispatch(setComments(response.data));\r\n    }\r\n  } catch (err) {\r\n    dispatchErrorMessage(dispatch, err);\r\n  }\r\n};\r\n\r\nexport const editPost = (postId, title, body, userId) => async (dispatch) => {\r\n  try {\r\n    let postBody = { id: postId, title, body, userId };\r\n    let response = await postsAPI.editPost(postId, postBody);\r\n    dispatch(editPostSuccess(response.data));\r\n  } catch (err) {\r\n    dispatchErrorMessage(dispatch, err);\r\n  }\r\n};\r\n\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n  try {\r\n    await postsAPI.deletePost(postId);\r\n    dispatch(postDeletedSuccess(postId));\r\n  } catch (err) {\r\n    dispatchErrorMessage(dispatch, err);\r\n  }\r\n};\r\n\r\nexport default postsReducer;\r\n","export const getPostsList = (state) => {\r\n  return state.posts.postsList;\r\n};\r\n\r\nexport const getCurrentPost = (state) => {\r\n  return state.posts.currentPost;\r\n};\r\n\r\nexport const getPostNumber = (state) => {\r\n  return state.posts.postNumber;\r\n};\r\n\r\nexport const getComments = (state) => {\r\n  return state.posts.comments;\r\n};\r\n","export const getUsersList = (state) => {\r\n  return state.users.usersList;\r\n};\r\n\r\nexport const getCurrentPostsUserName = (state) => {\r\n  return state.users.currentPostsUserName;\r\n};\r\n","//libraries\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n//css\r\nimport s from \"./PostsContainer.module.css\";\r\n//components\r\nimport PostItem from \"./PostItem/PostItem\";\r\nimport Loader from \"../common/Loader\";\r\nimport AddNewPostModal from \"./AddNewPostModal/AddNewPostModal\";\r\n//redux\r\nimport {\r\n  getPostsFromAPI,\r\n  addPostToAPI,\r\n  setCurrentPost,\r\n  setPostNumber,\r\n} from \"../../redux/postsReducer\";\r\nimport { setCurrentPostsUserName } from \"../../redux/usersReducer\";\r\n//selectors\r\nimport { getPostNumber, getPostsList } from \"../../utils/postsSelectors\";\r\nimport { getCurrentPostsUserName } from \"../../utils/usersSelectors\";\r\n\r\nconst PostsContainer = ({\r\n  postsList,\r\n  currentPostsUserName,\r\n  getPostsFromAPI,\r\n  setCurrentPostsUserName,\r\n  addPostToAPI,\r\n  setCurrentPost,\r\n  setPostNumber,\r\n  postNumber,\r\n  ...props\r\n}) => {\r\n  let [isInit, setIsInit] = useState(false);\r\n  let [isOnMouse, setIsOnMouse] = useState(false);\r\n  let [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCurrentPostsUserName(postsList[0].userId);\r\n  }, [postsList, setCurrentPostsUserName]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPost(postNumber);\r\n  }, [setCurrentPost, postNumber]);\r\n\r\n  useEffect(() => {\r\n    let userId = props.match.params.userId;\r\n    getPostsFromAPI(userId).then(() => {\r\n      setIsInit(true);\r\n    });\r\n  }, [getPostsFromAPI, props.match.params.userId]);\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n    document.body.classList.add(\"lock\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isInit ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={s.posts_page_wrap}>\r\n          <div className={s.title_wrap}>\r\n            <div className={s.title}>Posts of {currentPostsUserName}</div>\r\n            <button\r\n              onMouseOver={() => setIsOnMouse(true)}\r\n              onMouseOut={() => setIsOnMouse(false)}\r\n              onClick={openModal}\r\n              className={classNames(s.add_btn, {\r\n                [s.on_mouse]: isOnMouse,\r\n              })}\r\n            >\r\n              Add new\r\n            </button>\r\n          </div>\r\n\r\n          {isOpen && (\r\n            <AddNewPostModal\r\n              userId={postsList[0].userId}\r\n              addPostToAPI={addPostToAPI}\r\n              setIsOpen={setIsOpen}\r\n            />\r\n          )}\r\n\r\n          <div className={s.posts_items_wrap}>\r\n            {postsList.map((post) => (\r\n              <PostItem\r\n                key={post.id}\r\n                postId={post.id}\r\n                title={post.title}\r\n                body={post.body}\r\n                setCurrentPost={setCurrentPost}\r\n                setPostNumber={setPostNumber}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsList: getPostsList(state),\r\n    currentPostsUserName: getCurrentPostsUserName(state),\r\n    postNumber: getPostNumber(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getPostsFromAPI,\r\n    setCurrentPostsUserName,\r\n    addPostToAPI,\r\n    setCurrentPost,\r\n    setPostNumber,\r\n  }),\r\n  withRouter\r\n)(PostsContainer);\r\n","import { React, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport s from \"./UserItem.module.css\";\r\n\r\nconst UserItem = ({ id, name, companyName, email }) => {\r\n  const [isOnMouse, setIsOnMouse] = useState(false);\r\n\r\n  return (\r\n    <div className={s.user_item_wrap}>\r\n      <div className={s.name}>{name}</div>\r\n      <div className={s.company_name}>{companyName}</div>\r\n      <div className={s.email}>{email}</div>\r\n      <NavLink to={\"/posts/\" + id}>\r\n        <button\r\n          onMouseOver={() => setIsOnMouse(true)}\r\n          onMouseOut={() => setIsOnMouse(false)}\r\n          className={classNames(s.posts_btn, {\r\n            [s.on_mouse]: isOnMouse,\r\n          })}\r\n        >\r\n          Posts\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","//libraries\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { animateModal } from \"../../utils/animation\";\r\n//css\r\nimport s from \"./UsersContainer.module.css\";\r\n//components\r\nimport UserItem from \"./UserItem/UserItem\";\r\n//selectors\r\nimport { getUsersList } from \"../../utils/usersSelectors\";\r\n\r\nconst UsersContainer = ({ users }) => {\r\n  return (\r\n    <div className={s.users_page_wrap}>\r\n      <div className={s.users_title}>Users</div>\r\n\r\n      <div className={s.users_items_wrap}>\r\n        {users.map((user) => (\r\n          <UserItem\r\n            id={user.id}\r\n            key={user.id}\r\n            name={user.name}\r\n            companyName={user.company.name}\r\n            email={user.email}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsersList(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(UsersContainer);\r\n","import { React } from \"react\";\r\nimport s from \"./Comment.module.css\";\r\n\r\nconst Comment = ({ name, email, body }) => {\r\n  return (\r\n    <div className={s.comment_wrap}>\r\n      <div className={s.name_email_wrap}>\r\n        <div className={s.name}>{name}</div>\r\n        <div className={s.email}>{email}</div>\r\n      </div>\r\n\r\n      <div className={s.body}>{body}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from \"react\";\r\n//components\r\nimport ModalWindow from \"../../common/ModalWindow\";\r\n\r\nconst EditPostModal = ({\r\n  setIsOpen,\r\n  editPost,\r\n  postId,\r\n  userId,\r\n  title,\r\n  body,\r\n}) => {\r\n  const [formData, setFormData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (formData) {\r\n      editPost(postId, formData.title, formData.post, userId).then(() => {\r\n        setIsOpen(false);\r\n        document.body.classList.remove(\"lock\");\r\n      });\r\n    }\r\n  }, [formData, postId, setIsOpen, editPost, userId]);\r\n\r\n  return (\r\n    <ModalWindow\r\n      setFormData={setFormData}\r\n      setIsOpen={setIsOpen}\r\n      title={title}\r\n      body={body}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditPostModal;\r\n","//libraries\r\nimport { React, useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { animateModal } from \"../../../utils/animation\";\r\n//css\r\nimport s from \"./ConfirmWindow.module.css\";\r\n\r\nconst ConfirmWindow = ({\r\n  setConfirmWindowIsOpen,\r\n  deletePost,\r\n  postId,\r\n  postNumber,\r\n  setPostNumber,\r\n  ...props\r\n}) => {\r\n  let [confirmIsOnMouse, setConfirmIsOnMouse] = useState(false);\r\n  let [cancelIsOnMouse, setCancelIsOnMouse] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    deletePost(postId).then(() => {\r\n      setPostNumber(postNumber + 1);\r\n      setTimeout(() => {\r\n        props.history.push(\"/posts\");\r\n        document.body.classList.remove(\"lock\");\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => animateModal(s.window_overflow), [setConfirmWindowIsOpen]);\r\n\r\n  return (\r\n    <div className={s.window_overflow}>\r\n      <div className={s.window}>\r\n        <div className={s.question}>Are you sure?</div>\r\n        <div className={s.buttons_wrap}>\r\n          <button\r\n            onClick={handleClick}\r\n            onMouseOver={() => setConfirmIsOnMouse(true)}\r\n            onMouseOut={() => setConfirmIsOnMouse(false)}\r\n            className={classNames(s.confirm_btn, {\r\n              [s.confirm_on_mouse]: confirmIsOnMouse,\r\n            })}\r\n          >\r\n            Confirm\r\n          </button>\r\n\r\n          <button\r\n            onMouseOver={() => setCancelIsOnMouse(true)}\r\n            onMouseOut={() => setCancelIsOnMouse(false)}\r\n            className={classNames(s.cancel_btn, {\r\n              [s.cancel_on_mouse]: cancelIsOnMouse,\r\n            })}\r\n            onClick={() => {\r\n              setConfirmWindowIsOpen(false);\r\n              document.body.classList.remove(\"lock\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ConfirmWindow);\r\n","import { React } from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = ({ title, body }) => {\r\n  return (\r\n    <div className={s.post_wrap}>\r\n      <div className={s.post}>\r\n        <div className={s.title}>{title}</div>\r\n        <div className={s.body}>{body}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","//libraries\r\nimport { React, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport classNames from \"classnames\";\r\n//css\r\nimport s from \"./PostDetails.module.css\";\r\n//redux\r\nimport {\r\n  getCommentsFromAPI,\r\n  editPost,\r\n  deletePost,\r\n  setPostNumber,\r\n} from \"../../redux/postsReducer\";\r\n//components\r\nimport Comment from \"./Comment/Comment\";\r\nimport EditPostModal from \"./EditPostModal/EditPostModal\";\r\nimport ConfirmWindow from \"./ConfirmWindow/ConfirmWindow\";\r\nimport Loader from \"../common/Loader\";\r\n//selectors\r\nimport { getComments, getPostNumber } from \"../../utils/postsSelectors\";\r\nimport { getCurrentPost } from \"../../utils/postsSelectors\";\r\nimport { getCurrentPostsUserName } from \"../../utils/usersSelectors\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst PostDetailsContainer = ({\r\n  comments,\r\n  getCommentsFromAPI,\r\n  currentPost: { userId, id, title, body },\r\n  currentPostsUserName,\r\n  editPost,\r\n  deletePost,\r\n  postNumber,\r\n  setPostNumber,\r\n  ...props\r\n}) => {\r\n  let [isInit, setIsInit] = useState(false);\r\n  let [isOnMouseEdit, setIsOnMouseEdit] = useState(false);\r\n  let [isOnMouseDelete, setIsOnMouseDelete] = useState(false);\r\n  let [isOpen, setIsOpen] = useState(false);\r\n  let [confirmWindowIsOpen, setConfirmWindowIsOpen] = useState(false);\r\n  let postId = props.match.params.postId;\r\n\r\n  useEffect(() => {\r\n    getCommentsFromAPI(postId).then(() => {\r\n      setIsInit(true);\r\n    });\r\n  }, [postId, getCommentsFromAPI]);\r\n\r\n  return (\r\n    <>\r\n      {!isInit ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={s.post_page_wrap}>\r\n          <div className={s.title_buttons_wrap}>\r\n            <div className={s.page_title}>{currentPostsUserName} post</div>\r\n            <div className={s.buttons}>\r\n              <button\r\n                onClick={() => {\r\n                  setIsOpen(true);\r\n                  document.body.classList.add(\"lock\");\r\n                }}\r\n                onMouseOver={() => setIsOnMouseEdit(true)}\r\n                onMouseOut={() => setIsOnMouseEdit(false)}\r\n                className={classNames(s.edit_btn, {\r\n                  [s.on_mouse_edit]: isOnMouseEdit,\r\n                })}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setConfirmWindowIsOpen(true);\r\n                  document.body.classList.add(\"lock\");\r\n                }}\r\n                onMouseOver={() => setIsOnMouseDelete(true)}\r\n                onMouseOut={() => setIsOnMouseDelete(false)}\r\n                className={classNames(s.delete_btn, {\r\n                  [s.on_mouse_delete]: isOnMouseDelete,\r\n                })}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {isOpen && (\r\n            <EditPostModal\r\n              editPost={editPost}\r\n              postId={id}\r\n              setIsOpen={setIsOpen}\r\n              userId={userId}\r\n              title={title}\r\n              body={body}\r\n            />\r\n          )}\r\n\r\n          {confirmWindowIsOpen && (\r\n            <ConfirmWindow\r\n              postNumber={postNumber}\r\n              setPostNumber={setPostNumber}\r\n              postId={id}\r\n              deletePost={deletePost}\r\n              setConfirmWindowIsOpen={setConfirmWindowIsOpen}\r\n            />\r\n          )}\r\n\r\n          <Post title={title} body={body} />\r\n\r\n          <div className={s.comments_title}>Comments</div>\r\n\r\n          <div className={s.comments_wrap}>\r\n            {comments.map((comment) => (\r\n              <Comment\r\n                name={comment.name}\r\n                email={comment.email}\r\n                body={comment.body}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comments: getComments(state),\r\n    currentPost: getCurrentPost(state),\r\n    currentPostsUserName: getCurrentPostsUserName(state),\r\n    postNumber: getPostNumber(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getCommentsFromAPI,\r\n    editPost,\r\n    deletePost,\r\n    setPostNumber,\r\n  }),\r\n  withRouter\r\n)(PostDetailsContainer);\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\nimport postsReducer from \"./postsReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n  users: usersReducer,\r\n  app: appReducer,\r\n  posts: postsReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","export const getInitialized = (state) => {\r\n  return state.app.initialized;\r\n};\r\n","//libraries\nimport React, { useEffect } from \"react\";\nimport { connect, Provider } from \"react-redux\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n//css\nimport \"./App.css\";\n//components\nimport HeaderContainer from \"./components/HeaderContainer/HeaderContainer\";\nimport PostsContainer from \"./components/PostsContainer/PostsContainer\";\nimport UsersContainer from \"./components/UsersContainer/UsersContainer\";\nimport PostDetailsContainer from \"./components/PostDetailsContainer/PostDetailsContainer\";\nimport Loader from \"./components/common/Loader\";\n//redux\nimport store from \"./redux/store\";\nimport { initializeApp } from \"./redux/appReducer\";\n//selectors\nimport { getInitialized } from \"./utils/appSelectors\";\n\nconst App = ({ initialized, initializeApp }) => {\n  useEffect(() => {\n    initializeApp();\n  }, [initializeApp]);\n\n  return (\n    <>\n      {!initialized ? (\n        <Loader />\n      ) : (\n        <div className=\"App\">\n          <HeaderContainer />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/users\" />} />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/posts/:userId?\" render={() => <PostsContainer />} />\n            <Route\n              path=\"/post/:postId?\"\n              render={() => <PostDetailsContainer />}\n            />\n          </Switch>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: getInitialized(state),\n  };\n};\n\nconst AppContainer = connect(mapStateToProps, {\n  initializeApp,\n})(App);\n\nconst PostsApp = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default PostsApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport PostsApp from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <PostsApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}